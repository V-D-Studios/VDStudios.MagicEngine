using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace VDStudios.MagicEngine.DrawLibrary;
public class ShaderBuilder
{
    /// <summary>
    /// Analyzes the given shader in search of resource bindings that can then be used to re-organize a <see cref="ResourceBuilder"/>
    /// </summary>
    protected static readonly Regex ShaderBoundResourcesRegex 
        = new(@"layout\s*\((?:\s*set\s*=\s*(\d+)\s*,)?\s*binding\s*=\s*(\d+)\s*,?\s*\w*\)\s*\w+\s*\w*\s+(\w+)\s*[;{]", RegexOptions.Compiled);

    /// <summary>
    /// Analyzes the given shader in search of unbound resource statements that can then be filled by this <see cref="ShaderBuilder"/>
    /// </summary>
    protected static readonly Regex ShaderUnboundResourcesRegex
        = new(@"#binding\s*(?:\(((?:\s*\w+\s*,?)*)\))?\s*\w*\s*\w*\s*(\w+)\s*[;{]", RegexOptions.Compiled);

    /* 
     * First, document ShaderBuilder
     * The shader can be analyzed for bound resources first, then it can be analyzed for unbound resources. Or would it be better to just work with unbound resources?
     * Somehow, if the shader throws an exception, THE CODE GENERATED BY THIS CLASS **NEEDS** TO SHOW UP SOMEWHERE! otherwise, how the heck is it going to be debugged?
     */
}
